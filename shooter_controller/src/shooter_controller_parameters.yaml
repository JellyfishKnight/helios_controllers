shooter_controller:
  shooter_mode: {
    type: string,
    default_value: "abreast_double_shooter",
    description: "Shooter mode, can be 'abreast_double_shooter', 'single shooter' and so on",
  }
  motor_names: 
    abreast_double_shooter: {
      type: string_array,
      default_value: ["shooter_left_up", "shooter_left_down", "shooter_right_up", "shooter_right_down", "shooter_left_dial", "shooter_right_dial"],
      description: "Link names of the motors",
    }
    single_shooter: {
      type: string_array,
      default_value: ["shooter_up", "shooter_down", "dial"],
      description: "Link names of the motors",
    }
  motor_command_interfaces: {
    type: string_array,
    default_value: ["can_id", "motor_type", "motor_id", "motor_mode", "motor_value"],
    description: "Names of command interfaces of the motors",
  }
  motor_state_interfaces: {
    type: string_array,
    default_value: ["can_id", "motor_type", "motor_id", "total_angle", "velocity", "current", "temperature"],
    description: "Names of state interfaces of the motors",
  }
  publish_rate: {
    type: double,
    default_value: 1000,
    description: "Publish rate of states the controller got",
  }
  cmd_timeout: {
    type: int,
    default_value: 200,   #ms
    description: "the time interval between two commands",
  }
  update_rate: {
    type: int,
    default_value: 1000, #rate
    description: "the update rate of gimbal controller",
  }
  motor_commands: 
    abreast_double_shooter: {
      type: double_array,
      default_value: 
      [ #can_id motor_types motor_id motor_mode motor_value 
        2, 0x200, 2, 1, 0.0, #1    #leftup 
        2, 0x200, 4, 1, 0.0, #2    #leftdown
        2, 0x200, 1, 1, 0.0, #3    #rightup
        2, 0x200, 3, 1, 0.0, #4    #rightdown
        2, 0x1ff, 1, 1, 0.0, #6    #
        1, 0x1ff, 1, 1, 0.0, #5    #
      ],
    }
    single_shooter: {
      type: double_array,
      default_value: 
      [ #can_id motor_types motor_id motor_mode motor_value 
        2, 0x200, 2, 1, 0.0, 
        2, 0x200, 4, 1, 0.0,
        2, 0x1ff, 3, 1, 0.0, 
      ]
    }
  heat_res_limit: {
    type: double,
    default_value: 10,
    description: "the res of heat limit of shooter",
  }
  shooter_cmd_expire_time: {
    type: double,
    default_value: 0.1,
    description: "the time interval between two commands",
  }
  shooter: 
    high_velocity: {
      type: double,
      default_value: 1000,
      description: "High velocity of shooter",
    }
    low_velocity: {
      type: double,
      default_value: 1000,
      description: "Low velocity of shooter",
    }
  dial: 
    dial_motor_number: {
      type: int,
      default_value: 2,
      description: "Number of dial motors", 
    }
    dial_velocity_level: {
      type: double_array,
      # level 1 to 10
      default_value: [50, 200, 350, 500, 650, 800, 950, 1100, 1250, 1400],
      description: "Velocity level of dial",
    }
    count_clock_wise_angle: {
      type: double,
      default_value: 3072,
      description: "Angle of dial when it rotates clock wise for one circle",
    }
    dial_current_limit: {
      type: double,
      default_value: 100000000,
      description: "Current limit of dial",
    }
    dial_block_cnt_limit: {
      type: double,
      default_value: 100,
      description: "Block count limit of dial",
    }

